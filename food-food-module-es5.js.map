{"version":3,"sources":["src/app/food/add-food/add-food.component.html","src/app/food/all-foods/all-foods.component.html","src/app/food/food.component.html","src/app/food/view-food/view-food.component.html","node_modules/uuid/index.js","node_modules/uuid/lib/bytesToUuid.js","node_modules/uuid/lib/rng-browser.js","node_modules/uuid/v1.js","node_modules/uuid/v4.js","src/app/food/add-food/add-food.component.ts","src/app/food/all-foods/all-foods.component.ts","src/app/food/food-routing.module.ts","src/app/food/food.component.ts","src/app/food/food.module.ts","src/app/food/view-food/view-food.component.ts","src/shared/guard/auth.guard.ts","src/shared/service/food.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<nz-card class=\\\"w-90 m-auto\\\">\\r\\n    <h2 style=\\\"text-align: center;\\\">Add New Food</h2>\\r\\n    <form class=\\\"w-90 m-auto\\\" nz-form [formGroup]=\\\"foodForm\\\" (ngSubmit)=\\\"submitForm(foodForm.value)\\\">\\r\\n        <nz-form-item>\\r\\n            <nz-form-label nzRequired nzFor=\\\"name\\\">Food Name</nz-form-label>\\r\\n            <nz-form-control [nzErrorTip]=\\\"nameErrorTpl\\\">\\r\\n                <input class=\\\"p-20\\\" id=\\\"name\\\" nz-input formControlName=\\\"name\\\" placeholder=\\\"Food Name\\\">\\r\\n            </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n            <nz-form-label nzRequired nzFor=\\\"description\\\">Food Description</nz-form-label>\\r\\n            <nz-form-control [nzErrorTip]=\\\"descriptionTpl\\\">\\r\\n                <textarea rows=\\\"6\\\" id=\\\"description\\\" nz-input formControlName=\\\"description\\\" placeholder=\\\"Food Description\\\"></textarea>\\r\\n            </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n            <nz-form-label nzRequired nzFor=\\\"popularInList\\\">Popular In</nz-form-label>\\r\\n            <nz-form-control nzErrorTip=\\\"Popular in is required!\\\">\\r\\n                <nz-select nzMode=\\\"multiple\\\" nzPlaceHolder=\\\"Popular In\\\" formControlName=\\\"popularInList\\\" [compareWith]=\\\"compareFn\\\">\\r\\n                    <nz-option *ngFor=\\\"let option of countryList\\\" [nzLabel]=\\\"option.name\\\" [nzValue]=\\\"option\\\"></nz-option>\\r\\n                </nz-select>\\r\\n            </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n            <nz-form-control>\\r\\n                <nz-spin *ngIf=\\\"isLoadingFlag\\\" class=\\\"m-b-5\\\" nzSimple></nz-spin>\\r\\n                <button [disabled]=\\\"isLoadingFlag\\\" nz-button class=\\\"float-right\\\" nzType=\\\"primary\\\" nzSize=\\\"large\\\">Save Food</button>\\r\\n            </nz-form-control>\\r\\n        </nz-form-item>          \\r\\n    </form>\\r\\n</nz-card>\\r\\n<ng-template #nameErrorTpl let-control>\\r\\n    <ng-container *ngIf=\\\"control.hasError('required')\\\">food name is required!</ng-container>\\r\\n    <ng-container *ngIf=\\\"control.hasError('minlength')\\\">Minimum length should be 3!</ng-container>\\r\\n    <ng-container *ngIf=\\\"control.hasError('maxlength')\\\">Maximum length should be 30!</ng-container>\\r\\n</ng-template>\\r\\n<ng-template #descriptionTpl let-control>\\r\\n    <ng-container *ngIf=\\\"control.hasError('required')\\\">Description is required!</ng-container>\\r\\n    <ng-container *ngIf=\\\"control.hasError('minlength')\\\">Minimum length should be 300!</ng-container>\\r\\n</ng-template>\"","export default \"<div class=\\\"w-90 m-auto\\\">\\r\\n    <nz-table\\r\\n        #tableRef\\r\\n        nzShowPagination\\r\\n        [nzData]=\\\"foodList\\\"\\r\\n    >\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Added By</th>\\r\\n                <th>Action</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let data of tableRef.data\\\">\\r\\n                <td>{{ data.name }}</td>\\r\\n                <td>{{ data.addedByName }}</td>\\r\\n                <td>\\r\\n                    <a routerLink=\\\"/food/view-food/{{data.id}}\\\" class=\\\"m-r-10\\\">View</a>\\r\\n                    <a routerLink=\\\"/food/edit-food/{{data.id}}\\\" class=\\\"m-r-10\\\">Edit</a>\\r\\n                    <a  nz-popconfirm\\r\\n                        nzPopconfirmTitle=\\\"Are you sure delete this food?\\\"\\r\\n                        (nzOnConfirm)=\\\"deleteConfirm(data.id)\\\"\\r\\n                        nzPopconfirmPlacement=\\\"left\\\"\\r\\n                    >\\r\\n                        Delete\\r\\n                    </a>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </nz-table>\\r\\n    <button class=\\\"m-t-20\\\" nz-button nzType=\\\"primary\\\" nzSize=\\\"large\\\" routerLink=\\\"/food/add-food\\\">+ Add New Food</button>\\r\\n</div>\\r\\n\"","export default \"<nz-layout>\\r\\n    <nz-header>\\r\\n        <ul nz-menu [nzTheme]=\\\"'dark'\\\" [nzMode]=\\\"'horizontal'\\\">\\r\\n            <li nz-menu-item [nzSelected]=\\\"true\\\">\\r\\n                <a routerLink='/food/all-foods'>Home</a>\\r\\n            </li>\\r\\n            <li nz-nz-menu-item class=\\\"float-right cursor-pointer\\\">\\r\\n                <nz-avatar\\r\\n                    nz-popover\\r\\n                    [nzPopoverContent]=\\\"userTemplate\\\"\\r\\n                    nzPopoverPlacement=\\\"bottomRight\\\"\\r\\n                    nzPopoverTrigger=\\\"click\\\"\\r\\n                    nzIcon=\\\"user\\\"\\r\\n                >\\r\\n                </nz-avatar>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <ng-template #userTemplate>\\r\\n            <ul style=\\\"width: 150px;\\\" nz-list>\\r\\n                <li *ngIf=\\\"!isLogin\\\" nz-list-item>\\r\\n                    <a class=\\\"w-100\\\" routerLink=\\\"/auth/sign-up\\\"> Sign Up</a>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"!isLogin\\\"  nz-list-item>\\r\\n                    <a class=\\\"w-100\\\" routerLink=\\\"/auth/login\\\">Login</a>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"name\\\"  nz-list-item>\\r\\n                    <p class=\\\"w-100\\\">{{name}}</p>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"isLogin\\\" (click)=\\\"logout()\\\" nz-list-item>\\r\\n                    <a class=\\\"w-100\\\">Logout</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n          </ng-template>\\r\\n    </nz-header>\\r\\n    <router-outlet></router-outlet>\\r\\n    <nz-footer></nz-footer>\\r\\n</nz-layout>\"","export default \"<div class=\\\"w-90 m-auto\\\">\\r\\n    <nz-card [nzTitle]=\\\"selectedFood?.name\\\">\\r\\n        <h4>Written By: {{selectedFood?.addedByName}}</h4>\\r\\n        <h5> {{selectedFood?.addedAt}} | date</h5>\\r\\n        <p>{{selectedFood?.description}}</p>\\r\\n        <h5>Popular In: </h5>\\r\\n        <nz-tag class=\\\"m-l-10\\\" *ngFor=\\\"let item of selectedFood?.popularInList\\\">{{item.name}}</nz-tag>\\r\\n    </nz-card>\\r\\n</div>\"","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import { AuthService } from 'src/shared/service/auth.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FoodService } from './../../../shared/service/food.service';\r\nimport { IFood } from './../../../shared/interface/food';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ICountry } from 'src/shared/interface/country';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'app-add-food',\r\n    templateUrl: './add-food.component.html'\r\n})\r\nexport class AddFoodComponent implements OnInit {\r\n\r\n    foodForm: FormGroup;\r\n    isLoadingFlag: boolean;\r\n    countryList: ICountry[];\r\n    selectedFood: IFood;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private foodService: FoodService,\r\n        private authService: AuthService,\r\n        private messageSerive: NzMessageService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute) {\r\n        }\r\n\r\n    ngOnInit() {\r\n        this.foodForm = this.fb.group({\r\n            name: [null, [ Validators.required, Validators.minLength(3), Validators.maxLength(30)] ],\r\n            description: [null, [ Validators.required, Validators.minLength(300)] ],\r\n            popularInList: [null, [ Validators.required ] ],\r\n        });\r\n        this.countryList = this.foodService.getCountries();\r\n        this.activatedRoute.paramMap.subscribe(params => {\r\n            const id = params.get('id');\r\n            if (id) {\r\n                this.selectedFood = this.foodService.getFood(id);\r\n                if (this.selectedFood) {\r\n                    this.setCurrentValue();\r\n                } else {\r\n                    this.messageSerive.error('No food found!');\r\n                    this.router.navigate(['food/all-foods']);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    setCurrentValue() {\r\n        this.foodForm.patchValue(this.selectedFood);\r\n    }\r\n\r\n    compareFn(c1: ICountry, c2: ICountry): boolean {\r\n        return c1 && c2 ? c1.id === c2.id : c1 === c2;\r\n    }\r\n\r\n    makeFormDirty(form: FormGroup) {\r\n        Object.keys(form.controls).forEach(key => {\r\n            const control = form.controls[key];\r\n            control.markAsDirty();\r\n            control.updateValueAndValidity();\r\n        });\r\n    }\r\n\r\n    submitForm(formValue: IFood) {\r\n        this.makeFormDirty(this.foodForm);\r\n        if (this.foodForm.valid) {\r\n            this.isLoadingFlag = true;\r\n            if (this.selectedFood) {\r\n                formValue.id = this.selectedFood.id;\r\n                const status = this.foodService.editFood(formValue);\r\n                if (status) {\r\n                    this.messageSerive.success('Successfully updated!');\r\n                    this.router.navigate(['food/all-foods']);\r\n                } else {\r\n                    this.messageSerive.error('Unable to update food. Please register again!');\r\n                    this.authService.logOut();\r\n                    this.router.navigate(['auth/sign-up']);\r\n                }\r\n            } else {\r\n                const status = this.foodService.addFood(formValue);\r\n                if (status) {\r\n                    this.messageSerive.success('Successfully added!');\r\n                    this.router.navigate(['food/all-foods']);\r\n                } else {\r\n                    this.messageSerive.error('Unable to add food. Please register again!');\r\n                    this.authService.logOut();\r\n                    this.router.navigate(['auth/sign-up']);\r\n                }\r\n            }\r\n            this.isLoadingFlag = false;\r\n        }\r\n    }\r\n\r\n}\r\n","import { NzMessageService } from 'ng-zorro-antd';\r\nimport { IFood } from '../../../shared/interface/food';\r\nimport { FoodService } from '../../../shared/service/food.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-all-foods',\r\n    templateUrl: './all-foods.component.html'\r\n})\r\nexport class AllFoodsComponent implements OnInit {\r\n\r\n    foodList: IFood[];\r\n\r\n    constructor(private foodService: FoodService, private messageService: NzMessageService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.foodList = this.foodService.getAllFoods();\r\n    }\r\n\r\n    deleteConfirm(id: string) {\r\n        const status = this.foodService.deleteFood(id);\r\n        if (status) {\r\n            this.messageService.success('Successfully deleted!');\r\n            this.foodList = this.foodList.filter(x => x.id !== id);\r\n        } else {\r\n            this.messageService.error('Please login to delete!');\r\n        }\r\n    }\r\n}\r\n","import { ViewFoodComponent } from './view-food/view-food.component';\r\nimport { FoodComponent } from './food.component';\r\nimport { AuthGuard } from '../../shared/guard/auth.guard';\r\nimport { AddFoodComponent } from './add-food/add-food.component';\r\nimport { AllFoodsComponent } from './all-foods/all-foods.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: FoodComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                redirectTo: 'all-foods',\r\n                pathMatch: 'full'\r\n            },\r\n            {\r\n                path: 'all-foods',\r\n                component: AllFoodsComponent\r\n            },\r\n            {\r\n                path: 'add-food',\r\n                component: AddFoodComponent,\r\n                canActivate: [AuthGuard]\r\n            },\r\n            {\r\n                path: 'edit-food/:id',\r\n                component: AddFoodComponent,\r\n                canActivate: [AuthGuard]\r\n            },\r\n            {\r\n                path: 'view-food/:id',\r\n                component: ViewFoodComponent,\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class FoodRoutingModule { }\r\n","import { AuthService } from './../../shared/service/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-food',\r\n    templateUrl: './food.component.html'\r\n})\r\nexport class FoodComponent implements OnInit {\r\n\r\n    isLogin: boolean;\r\n    name: string;\r\n\r\n    constructor(private authService: AuthService) { }\r\n\r\n    ngOnInit() {\r\n        this.isLogin = this.authService.isLoggedin();\r\n        this.name = this.authService.getUserName();\r\n    }\r\n\r\n    logout() {\r\n        this.authService.logOut();\r\n        this.isLogin = false;\r\n        this.name = null;\r\n    }\r\n\r\n}\r\n","import { AuthGuard } from './../../shared/guard/auth.guard';\r\nimport { NgModule } from '@angular/core';\r\nimport { NzCardModule } from 'ng-zorro-antd/card';\r\nimport { NzFormModule, NzInputModule, NzButtonModule, NzPopoverModule, NzListModule, NzSelectModule, NzTableModule  } from 'ng-zorro-antd';\r\nimport { NzGridModule, NzSpinModule, NzLayoutModule, NzMenuModule, NzAvatarModule, NzMessageModule, NzUploadModule  } from 'ng-zorro-antd';\r\nimport { NzIconModule, NzTagModule, NzPopconfirmModule } from 'ng-zorro-antd';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FoodRoutingModule } from './food-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AllFoodsComponent } from './all-foods/all-foods.component';\r\nimport { AddFoodComponent } from './add-food/add-food.component';\r\nimport { FoodComponent } from './food.component';\r\nimport { ViewFoodComponent } from './view-food/view-food.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AllFoodsComponent,\r\n        AddFoodComponent,\r\n        FoodComponent,\r\n        ViewFoodComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FoodRoutingModule,\r\n        NzCardModule,\r\n        NzFormModule,\r\n        NzInputModule,\r\n        ReactiveFormsModule,\r\n        NzButtonModule,\r\n        NzGridModule,\r\n        NzSpinModule,\r\n        NzLayoutModule,\r\n        NzMenuModule,\r\n        NzAvatarModule,\r\n        NzPopoverModule,\r\n        NzListModule,\r\n        NzSelectModule,\r\n        NzMessageModule,\r\n        NzUploadModule,\r\n        NzTableModule,\r\n        NzIconModule,\r\n        NzTagModule,\r\n        NzPopconfirmModule\r\n    ],\r\n    providers: [ AuthGuard ]\r\n})\r\nexport class FoodModule { }\r\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { FoodService } from './../../../shared/service/food.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { IFood } from 'src/shared/interface/food';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'app-view-food',\r\n    templateUrl: './view-food.component.html'\r\n})\r\nexport class ViewFoodComponent implements OnInit {\r\n\r\n    selectedFood: IFood;\r\n\r\n    constructor(\r\n        private foodService: FoodService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private router: Router,\r\n        private messageService: NzMessageService) {\r\n        }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.paramMap.subscribe(params => {\r\n            const foodId = params.get('id');\r\n            if (foodId) {\r\n                this.selectedFood = this.foodService.getFood(foodId);\r\n                if (!this.selectedFood) {\r\n                    this.messageService.error('No food found!');\r\n                    this.router.navigate(['food/all-foods']);\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","import { AuthService } from './../service/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard {\r\n\r\n    constructor(private authService: AuthService, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        if (!this.authService.isLoggedin()) {\r\n            this.router.navigate(['auth/login'], { queryParams: { redirectURL: state.url} });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { AuthService } from 'src/shared/service/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ICountry } from '../interface/country';\r\nimport { IFood } from '../interface/food';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class FoodService {\r\n\r\n    apiUrl: string;\r\n    foodList: IFood[] = [];\r\n    countryList: ICountry[] = [];\r\n\r\n    constructor(private authService: AuthService) {\r\n        const food1: IFood = {\r\n            id: uuid(),\r\n            name: 'Fuchka',\r\n            // tslint:disable-next-line: max-line-length\r\n            description: 'Fuska is the most popular street food in Bangladesh. I bet that every Bangladeshi, who lives in abroad, misses its unique spicy, sour, crispy taste. But we can easily make it at home and enjoy the deshi flavour in abroad. It is a bit long process, if you make the Fuska shell before, it will be less hustle. Only one thing (Talmakhana) will be hard to get in abroad.You can bring it from Bangladesh. Even you can buy readymade Fuska shells from Indian grocery. But I always prefer homemade one.',\r\n            popularInList: this.countryList,\r\n            addedByName: 'Tomal',\r\n            addedAt: new Date('2020-07-31')\r\n        };\r\n        this.foodList.push(food1);\r\n        const country1: ICountry = {\r\n            id: 1,\r\n            name: 'Bangladesh'\r\n        };\r\n        const country2: ICountry = {\r\n            id: 2,\r\n            name: 'Nepal'\r\n        };\r\n        const country3: ICountry = {\r\n            id: 3,\r\n            name: 'Srilanka'\r\n        };\r\n        this.countryList.push(country1);\r\n        this.countryList.push(country2);\r\n        this.countryList.push(country3);\r\n    }\r\n\r\n    getCountries(): ICountry[] {\r\n        return this.countryList;\r\n    }\r\n\r\n    getAllFoods(): IFood[] {\r\n        return this.foodList;\r\n    }\r\n\r\n    getFood(id: string): IFood {\r\n        return this.foodList.find(x => x.id === id);\r\n    }\r\n\r\n    addFood(model: IFood): boolean {\r\n        const name = this.authService.getUserName();\r\n        if (name) {\r\n            model.id = uuid();\r\n            model.addedByName = name;\r\n            model.addedAt = new Date();\r\n            this.foodList.push(model);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    editFood(model: IFood) {\r\n        const index = this.foodList.findIndex(x => x.id === model.id);\r\n        if (index >= 0) {\r\n            this.foodList[index] = model;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    deleteFood(id: string) {\r\n        const isLoggedIn = this.authService.isLoggedin();\r\n        if (isLoggedIn) {\r\n            const index = this.foodList.findIndex(x => x.id === id);\r\n            if (index >= 0) {\r\n                this.foodList.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"food-food-module-es5.js"}