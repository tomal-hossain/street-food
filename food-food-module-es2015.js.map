{"version":3,"sources":["./src/app/food/add-food/add-food.component.html","./src/app/food/all-foods/all-foods.component.html","./src/app/food/food.component.html","./src/app/food/view-food/view-food.component.html","./node_modules/uuid/index.js","./node_modules/uuid/lib/bytesToUuid.js","./node_modules/uuid/lib/rng-browser.js","./node_modules/uuid/v1.js","./node_modules/uuid/v4.js","./src/app/food/add-food/add-food.component.ts","./src/app/food/all-foods/all-foods.component.ts","./src/app/food/food-routing.module.ts","./src/app/food/food.component.ts","./src/app/food/food.module.ts","./src/app/food/view-food/view-food.component.ts","./src/shared/guard/auth.guard.ts","./src/shared/service/food.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,sIAAuE,s5E;;;;;;;;;;;;ACAtF;AAAe,seAAua,aAAa,+BAA+B,oBAAoB,uFAAuF,SAAS,sFAAsF,SAAS,klB;;;;;;;;;;;;ACArrB;AAAe,+yBAAgvB,mbAAmb,MAAM,mV;;;;;;;;;;;;ACAxrC;AAAe,2KAA4G,2BAA2B,wBAAwB,uBAAuB,6BAA6B,2BAA2B,+HAA+H,WAAW,sC;;;;;;;;;;;ACAvY,SAAS,mBAAO,CAAC,uCAAM;AACvB,SAAS,mBAAO,CAAC,uCAAM;;AAEvB;AACA;AACA;;AAEA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjCA,UAAU,mBAAO,CAAC,yDAAW;AAC7B,kBAAkB,mBAAO,CAAC,iEAAmB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;;;;;;;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","file":"food-food-module-es2015.js","sourcesContent":["export default \"<nz-card class=\\\"w-90 m-auto\\\">\\r\\n    <h2 style=\\\"text-align: center;\\\">Add New Food</h2>\\r\\n    <form class=\\\"w-90 m-auto\\\" nz-form [formGroup]=\\\"foodForm\\\" (ngSubmit)=\\\"submitForm(foodForm.value)\\\">\\r\\n        <nz-form-item>\\r\\n            <nz-form-label nzRequired nzFor=\\\"name\\\">Food Name</nz-form-label>\\r\\n            <nz-form-control [nzErrorTip]=\\\"nameErrorTpl\\\">\\r\\n                <input class=\\\"p-20\\\" id=\\\"name\\\" nz-input formControlName=\\\"name\\\" placeholder=\\\"Food Name\\\">\\r\\n            </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n            <nz-form-label nzRequired nzFor=\\\"description\\\">Food Description</nz-form-label>\\r\\n            <nz-form-control [nzErrorTip]=\\\"descriptionTpl\\\">\\r\\n                <textarea rows=\\\"6\\\" id=\\\"description\\\" nz-input formControlName=\\\"description\\\" placeholder=\\\"Food Description\\\"></textarea>\\r\\n            </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n            <nz-form-label nzRequired nzFor=\\\"popularInList\\\">Popular In</nz-form-label>\\r\\n            <nz-form-control nzErrorTip=\\\"Popular in is required!\\\">\\r\\n                <nz-select nzMode=\\\"multiple\\\" nzPlaceHolder=\\\"Popular In\\\" formControlName=\\\"popularInList\\\" [compareWith]=\\\"compareFn\\\">\\r\\n                    <nz-option *ngFor=\\\"let option of countryList\\\" [nzLabel]=\\\"option.name\\\" [nzValue]=\\\"option\\\"></nz-option>\\r\\n                </nz-select>\\r\\n            </nz-form-control>\\r\\n        </nz-form-item>\\r\\n        <nz-form-item>\\r\\n            <nz-form-control>\\r\\n                <nz-spin *ngIf=\\\"isLoadingFlag\\\" class=\\\"m-b-5\\\" nzSimple></nz-spin>\\r\\n                <button [disabled]=\\\"isLoadingFlag\\\" nz-button class=\\\"float-right\\\" nzType=\\\"primary\\\" nzSize=\\\"large\\\">Save Food</button>\\r\\n            </nz-form-control>\\r\\n        </nz-form-item>          \\r\\n    </form>\\r\\n</nz-card>\\r\\n<ng-template #nameErrorTpl let-control>\\r\\n    <ng-container *ngIf=\\\"control.hasError('required')\\\">food name is required!</ng-container>\\r\\n    <ng-container *ngIf=\\\"control.hasError('minlength')\\\">Minimum length should be 3!</ng-container>\\r\\n    <ng-container *ngIf=\\\"control.hasError('maxlength')\\\">Maximum length should be 30!</ng-container>\\r\\n</ng-template>\\r\\n<ng-template #descriptionTpl let-control>\\r\\n    <ng-container *ngIf=\\\"control.hasError('required')\\\">Description is required!</ng-container>\\r\\n    <ng-container *ngIf=\\\"control.hasError('minlength')\\\">Minimum length should be 300!</ng-container>\\r\\n</ng-template>\"","export default \"<div class=\\\"w-90 m-auto\\\">\\r\\n    <nz-table\\r\\n        #tableRef\\r\\n        nzShowPagination\\r\\n        [nzData]=\\\"foodList\\\"\\r\\n    >\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Added By</th>\\r\\n                <th>Action</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let data of tableRef.data\\\">\\r\\n                <td>{{ data.name }}</td>\\r\\n                <td>{{ data.addedByName }}</td>\\r\\n                <td>\\r\\n                    <a routerLink=\\\"/food/view-food/{{data.id}}\\\" class=\\\"m-r-10\\\">View</a>\\r\\n                    <a routerLink=\\\"/food/edit-food/{{data.id}}\\\" class=\\\"m-r-10\\\">Edit</a>\\r\\n                    <a  nz-popconfirm\\r\\n                        nzPopconfirmTitle=\\\"Are you sure delete this food?\\\"\\r\\n                        (nzOnConfirm)=\\\"deleteConfirm(data.id)\\\"\\r\\n                        nzPopconfirmPlacement=\\\"left\\\"\\r\\n                    >\\r\\n                        Delete\\r\\n                    </a>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </nz-table>\\r\\n    <button class=\\\"m-t-20\\\" nz-button nzType=\\\"primary\\\" nzSize=\\\"large\\\" routerLink=\\\"/food/add-food\\\">+ Add New Food</button>\\r\\n</div>\\r\\n\"","export default \"<nz-layout>\\r\\n    <nz-header>\\r\\n        <ul nz-menu [nzTheme]=\\\"'dark'\\\" [nzMode]=\\\"'horizontal'\\\">\\r\\n            <li nz-menu-item [nzSelected]=\\\"true\\\">\\r\\n                <a routerLink='/food/all-foods'>Home</a>\\r\\n            </li>\\r\\n            <li nz-nz-menu-item class=\\\"float-right cursor-pointer\\\">\\r\\n                <nz-avatar\\r\\n                    nz-popover\\r\\n                    [nzPopoverContent]=\\\"userTemplate\\\"\\r\\n                    nzPopoverPlacement=\\\"bottomRight\\\"\\r\\n                    nzPopoverTrigger=\\\"click\\\"\\r\\n                    nzIcon=\\\"user\\\"\\r\\n                >\\r\\n                </nz-avatar>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <ng-template #userTemplate>\\r\\n            <ul style=\\\"width: 150px;\\\" nz-list>\\r\\n                <li *ngIf=\\\"!isLogin\\\" nz-list-item>\\r\\n                    <a class=\\\"w-100\\\" routerLink=\\\"/auth/sign-up\\\"> Sign Up</a>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"!isLogin\\\"  nz-list-item>\\r\\n                    <a class=\\\"w-100\\\" routerLink=\\\"/auth/login\\\">Login</a>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"name\\\"  nz-list-item>\\r\\n                    <p class=\\\"w-100\\\">{{name}}</p>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"isLogin\\\" (click)=\\\"logout()\\\" nz-list-item>\\r\\n                    <a class=\\\"w-100\\\">Logout</a>\\r\\n                </li>\\r\\n            </ul>\\r\\n          </ng-template>\\r\\n    </nz-header>\\r\\n    <router-outlet></router-outlet>\\r\\n    <nz-footer></nz-footer>\\r\\n</nz-layout>\"","export default \"<div class=\\\"w-90 m-auto\\\">\\r\\n    <nz-card [nzTitle]=\\\"selectedFood?.name\\\">\\r\\n        <h4>Written By: {{selectedFood?.addedByName}}</h4>\\r\\n        <h5> {{selectedFood?.addedAt}} | date</h5>\\r\\n        <p>{{selectedFood?.description}}</p>\\r\\n        <h5>Popular In: </h5>\\r\\n        <nz-tag class=\\\"m-l-10\\\" *ngFor=\\\"let item of selectedFood?.popularInList\\\">{{item.name}}</nz-tag>\\r\\n    </nz-card>\\r\\n</div>\"","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import { AuthService } from 'src/shared/service/auth.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FoodService } from './../../../shared/service/food.service';\r\nimport { IFood } from './../../../shared/interface/food';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ICountry } from 'src/shared/interface/country';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'app-add-food',\r\n    templateUrl: './add-food.component.html'\r\n})\r\nexport class AddFoodComponent implements OnInit {\r\n\r\n    foodForm: FormGroup;\r\n    isLoadingFlag: boolean;\r\n    countryList: ICountry[];\r\n    selectedFood: IFood;\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private foodService: FoodService,\r\n        private authService: AuthService,\r\n        private messageSerive: NzMessageService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute) {\r\n        }\r\n\r\n    ngOnInit() {\r\n        this.foodForm = this.fb.group({\r\n            name: [null, [ Validators.required, Validators.minLength(3), Validators.maxLength(30)] ],\r\n            description: [null, [ Validators.required, Validators.minLength(300)] ],\r\n            popularInList: [null, [ Validators.required ] ],\r\n        });\r\n        this.countryList = this.foodService.getCountries();\r\n        this.activatedRoute.paramMap.subscribe(params => {\r\n            const id = params.get('id');\r\n            if (id) {\r\n                this.selectedFood = this.foodService.getFood(id);\r\n                if (this.selectedFood) {\r\n                    this.setCurrentValue();\r\n                } else {\r\n                    this.messageSerive.error('No food found!');\r\n                    this.router.navigate(['food/all-foods']);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    setCurrentValue() {\r\n        this.foodForm.patchValue(this.selectedFood);\r\n    }\r\n\r\n    compareFn(c1: ICountry, c2: ICountry): boolean {\r\n        return c1 && c2 ? c1.id === c2.id : c1 === c2;\r\n    }\r\n\r\n    makeFormDirty(form: FormGroup) {\r\n        Object.keys(form.controls).forEach(key => {\r\n            const control = form.controls[key];\r\n            control.markAsDirty();\r\n            control.updateValueAndValidity();\r\n        });\r\n    }\r\n\r\n    submitForm(formValue: IFood) {\r\n        this.makeFormDirty(this.foodForm);\r\n        if (this.foodForm.valid) {\r\n            this.isLoadingFlag = true;\r\n            if (this.selectedFood) {\r\n                formValue.id = this.selectedFood.id;\r\n                const status = this.foodService.editFood(formValue);\r\n                if (status) {\r\n                    this.messageSerive.success('Successfully updated!');\r\n                    this.router.navigate(['food/all-foods']);\r\n                } else {\r\n                    this.messageSerive.error('Unable to update food. Please register again!');\r\n                    this.authService.logOut();\r\n                    this.router.navigate(['auth/sign-up']);\r\n                }\r\n            } else {\r\n                const status = this.foodService.addFood(formValue);\r\n                if (status) {\r\n                    this.messageSerive.success('Successfully added!');\r\n                    this.router.navigate(['food/all-foods']);\r\n                } else {\r\n                    this.messageSerive.error('Unable to add food. Please register again!');\r\n                    this.authService.logOut();\r\n                    this.router.navigate(['auth/sign-up']);\r\n                }\r\n            }\r\n            this.isLoadingFlag = false;\r\n        }\r\n    }\r\n\r\n}\r\n","import { NzMessageService } from 'ng-zorro-antd';\r\nimport { IFood } from '../../../shared/interface/food';\r\nimport { FoodService } from '../../../shared/service/food.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-all-foods',\r\n    templateUrl: './all-foods.component.html'\r\n})\r\nexport class AllFoodsComponent implements OnInit {\r\n\r\n    foodList: IFood[];\r\n\r\n    constructor(private foodService: FoodService, private messageService: NzMessageService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.foodList = this.foodService.getAllFoods();\r\n    }\r\n\r\n    deleteConfirm(id: string) {\r\n        const status = this.foodService.deleteFood(id);\r\n        if (status) {\r\n            this.messageService.success('Successfully deleted!');\r\n            this.foodList = this.foodList.filter(x => x.id !== id);\r\n        } else {\r\n            this.messageService.error('Please login to delete!');\r\n        }\r\n    }\r\n}\r\n","import { ViewFoodComponent } from './view-food/view-food.component';\r\nimport { FoodComponent } from './food.component';\r\nimport { AuthGuard } from '../../shared/guard/auth.guard';\r\nimport { AddFoodComponent } from './add-food/add-food.component';\r\nimport { AllFoodsComponent } from './all-foods/all-foods.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: FoodComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                redirectTo: 'all-foods',\r\n                pathMatch: 'full'\r\n            },\r\n            {\r\n                path: 'all-foods',\r\n                component: AllFoodsComponent\r\n            },\r\n            {\r\n                path: 'add-food',\r\n                component: AddFoodComponent,\r\n                canActivate: [AuthGuard]\r\n            },\r\n            {\r\n                path: 'edit-food/:id',\r\n                component: AddFoodComponent,\r\n                canActivate: [AuthGuard]\r\n            },\r\n            {\r\n                path: 'view-food/:id',\r\n                component: ViewFoodComponent,\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class FoodRoutingModule { }\r\n","import { AuthService } from './../../shared/service/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-food',\r\n    templateUrl: './food.component.html'\r\n})\r\nexport class FoodComponent implements OnInit {\r\n\r\n    isLogin: boolean;\r\n    name: string;\r\n\r\n    constructor(private authService: AuthService) { }\r\n\r\n    ngOnInit() {\r\n        this.isLogin = this.authService.isLoggedin();\r\n        this.name = this.authService.getUserName();\r\n    }\r\n\r\n    logout() {\r\n        this.authService.logOut();\r\n        this.isLogin = false;\r\n        this.name = null;\r\n    }\r\n\r\n}\r\n","import { AuthGuard } from './../../shared/guard/auth.guard';\r\nimport { NgModule } from '@angular/core';\r\nimport { NzCardModule } from 'ng-zorro-antd/card';\r\nimport { NzFormModule, NzInputModule, NzButtonModule, NzPopoverModule, NzListModule, NzSelectModule, NzTableModule  } from 'ng-zorro-antd';\r\nimport { NzGridModule, NzSpinModule, NzLayoutModule, NzMenuModule, NzAvatarModule, NzMessageModule, NzUploadModule  } from 'ng-zorro-antd';\r\nimport { NzIconModule, NzTagModule, NzPopconfirmModule } from 'ng-zorro-antd';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FoodRoutingModule } from './food-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AllFoodsComponent } from './all-foods/all-foods.component';\r\nimport { AddFoodComponent } from './add-food/add-food.component';\r\nimport { FoodComponent } from './food.component';\r\nimport { ViewFoodComponent } from './view-food/view-food.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AllFoodsComponent,\r\n        AddFoodComponent,\r\n        FoodComponent,\r\n        ViewFoodComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FoodRoutingModule,\r\n        NzCardModule,\r\n        NzFormModule,\r\n        NzInputModule,\r\n        ReactiveFormsModule,\r\n        NzButtonModule,\r\n        NzGridModule,\r\n        NzSpinModule,\r\n        NzLayoutModule,\r\n        NzMenuModule,\r\n        NzAvatarModule,\r\n        NzPopoverModule,\r\n        NzListModule,\r\n        NzSelectModule,\r\n        NzMessageModule,\r\n        NzUploadModule,\r\n        NzTableModule,\r\n        NzIconModule,\r\n        NzTagModule,\r\n        NzPopconfirmModule\r\n    ],\r\n    providers: [ AuthGuard ]\r\n})\r\nexport class FoodModule { }\r\n","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { FoodService } from './../../../shared/service/food.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { IFood } from 'src/shared/interface/food';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'app-view-food',\r\n    templateUrl: './view-food.component.html'\r\n})\r\nexport class ViewFoodComponent implements OnInit {\r\n\r\n    selectedFood: IFood;\r\n\r\n    constructor(\r\n        private foodService: FoodService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private router: Router,\r\n        private messageService: NzMessageService) {\r\n        }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.paramMap.subscribe(params => {\r\n            const foodId = params.get('id');\r\n            if (foodId) {\r\n                this.selectedFood = this.foodService.getFood(foodId);\r\n                if (!this.selectedFood) {\r\n                    this.messageService.error('No food found!');\r\n                    this.router.navigate(['food/all-foods']);\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","import { AuthService } from './../service/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard {\r\n\r\n    constructor(private authService: AuthService, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        if (!this.authService.isLoggedin()) {\r\n            this.router.navigate(['auth/login'], { queryParams: { redirectURL: state.url} });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { AuthService } from 'src/shared/service/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ICountry } from '../interface/country';\r\nimport { IFood } from '../interface/food';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class FoodService {\r\n\r\n    apiUrl: string;\r\n    foodList: IFood[] = [];\r\n    countryList: ICountry[] = [];\r\n\r\n    constructor(private authService: AuthService) {\r\n        const food1: IFood = {\r\n            id: uuid(),\r\n            name: 'Fuchka',\r\n            // tslint:disable-next-line: max-line-length\r\n            description: 'Fuska is the most popular street food in Bangladesh. I bet that every Bangladeshi, who lives in abroad, misses its unique spicy, sour, crispy taste. But we can easily make it at home and enjoy the deshi flavour in abroad. It is a bit long process, if you make the Fuska shell before, it will be less hustle. Only one thing (Talmakhana) will be hard to get in abroad.You can bring it from Bangladesh. Even you can buy readymade Fuska shells from Indian grocery. But I always prefer homemade one.',\r\n            popularInList: this.countryList,\r\n            addedByName: 'Tomal',\r\n            addedAt: new Date('2020-07-31')\r\n        };\r\n        this.foodList.push(food1);\r\n        const country1: ICountry = {\r\n            id: 1,\r\n            name: 'Bangladesh'\r\n        };\r\n        const country2: ICountry = {\r\n            id: 2,\r\n            name: 'Nepal'\r\n        };\r\n        const country3: ICountry = {\r\n            id: 3,\r\n            name: 'Srilanka'\r\n        };\r\n        this.countryList.push(country1);\r\n        this.countryList.push(country2);\r\n        this.countryList.push(country3);\r\n    }\r\n\r\n    getCountries(): ICountry[] {\r\n        return this.countryList;\r\n    }\r\n\r\n    getAllFoods(): IFood[] {\r\n        return this.foodList;\r\n    }\r\n\r\n    getFood(id: string): IFood {\r\n        return this.foodList.find(x => x.id === id);\r\n    }\r\n\r\n    addFood(model: IFood): boolean {\r\n        const name = this.authService.getUserName();\r\n        if (name) {\r\n            model.id = uuid();\r\n            model.addedByName = name;\r\n            model.addedAt = new Date();\r\n            this.foodList.push(model);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    editFood(model: IFood) {\r\n        const index = this.foodList.findIndex(x => x.id === model.id);\r\n        if (index >= 0) {\r\n            this.foodList[index] = model;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    deleteFood(id: string) {\r\n        const isLoggedIn = this.authService.isLoggedin();\r\n        if (isLoggedIn) {\r\n            const index = this.foodList.findIndex(x => x.id === id);\r\n            if (index >= 0) {\r\n                this.foodList.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}