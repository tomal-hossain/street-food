{"version":3,"sources":["./src/shared/service/auth.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACO;AAQlD,IAAa,WAAW,GAAxB,MAAa,WAAW;IAIpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAChC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,KAAc;QACjB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC/F,IAAI,IAAI,EAAE;YACN,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,KAAc;QACjB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9D,IAAI,IAAI,EAAE;YACN,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,cAAc,CAAC,KAAa;QACxB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9D,IAAI,IAAI,EAAE;YACN,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,aAAa,CAAC,KAAc;QACxB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC;QACpE,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAC/C,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,SAAS,CAAC,KAAa;QACnB,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED,UAAU;QACN,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAChD,IAAI,KAAK,EAAE;YACP,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;YAC9D,IAAI,KAAK,IAAI,CAAC,EAAE;gBACZ,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,WAAW;QACP,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAChD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QAC9D,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;SACpC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,MAAM;QACF,YAAY,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;CACJ;;YAjE6B,+DAAU;;AAJ3B,WAAW;IAHvB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,WAAW,CAqEvB;AArEuB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ISignIn } from '../interface/sign-in';\r\nimport { ISignUp } from '../interface/sign-up';\r\nimport { IEmail } from '../interface/email';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n    apiUrl: string;\r\n    userList: ISignUp[];\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.userList = [];\r\n    }\r\n\r\n    signIn(model: ISignIn): boolean {\r\n        const user = this.userList.find(x => x.email === model.email && x.password === model.password);\r\n        if (user) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    signUp(model: ISignUp): boolean {\r\n        const user = this.userList.find(x => x.email === model.email);\r\n        if (user) {\r\n            return false;\r\n        }\r\n        this.userList.push(model);\r\n        return true;\r\n    }\r\n\r\n    forgotPassword(model: IEmail): boolean {\r\n        const user = this.userList.find(x => x.email === model.email);\r\n        if (user) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    resetPassword(model: ISignIn): boolean {\r\n        const index = this.userList.findIndex(x => x.email === model.email);\r\n        if (index >= 0) {\r\n            this.userList[index].password = model.password;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    saveToken(token: string) {\r\n        localStorage.setItem('userToken', token);\r\n    }\r\n\r\n    isLoggedin(): boolean {\r\n        const email = localStorage.getItem('userToken');\r\n        if (email) {\r\n            const index = this.userList.findIndex(x => x.email === email);\r\n            if (index >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getUserName(): string {\r\n        const email = localStorage.getItem('userToken');\r\n        const index = this.userList.findIndex(x => x.email === email);\r\n        if (index >= 0) {\r\n            return this.userList[index].name;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    logOut() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}